"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _extends = require("@babel/runtime/helpers/extends"), _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties"), core = require("@emotion/core"), react = require("react"), reactRadios = require("react-radios"), theme = require("@arch-ui/theme"), controls = require("@arch-ui/controls"), layout = require("@arch-ui/layout");

function _interopDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}

var _extends__default = _interopDefault(_extends), _objectWithoutProperties__default = _interopDefault(_objectWithoutProperties);

const ControlLabel = _ref => {
  let props = _objectWithoutProperties__default.default(_ref, [ "isChecked", "isDisabled" ]);
  const borderRadius = "checkbox" === react.Children.toArray(props.children)[0].props.type ? 3 : "2em";
  return core.jsx("label", _extends__default.default({
    css: {
      alignItems: "center",
      border: "1px solid " + theme.colors.N10,
      borderRadius: borderRadius,
      display: "flex",
      fontSize: "0.75em",
      fontWeight: 500,
      lineHeight: 1,
      transition: "border-color 150ms linear",
      width: "100%",
      userSelect: "none",
      ":hover, :focus": {
        borderColor: theme.colors.N20
      },
      ":active": {
        backgroundColor: theme.colors.N05
      }
    }
  }, props));
}, StretchGroup = props => core.jsx(layout.FlexGroup, _extends__default.default({
  stretch: !0
}, props)), CheckboxGroup = props => core.jsx(reactRadios.CheckboxGroup, _extends__default.default({
  component: StretchGroup
}, props)), ButtonCheckbox = props => core.jsx(controls.CheckboxPrimitive, _extends__default.default({
  components: {
    Label: ControlLabel
  }
}, props)), Checkbox = props => core.jsx(reactRadios.Checkbox, _extends__default.default({
  component: ButtonCheckbox
}, props)), RadioGroup = props => core.jsx(reactRadios.RadioGroup, _extends__default.default({
  component: StretchGroup
}, props)), ButtonRadio = props => core.jsx(controls.RadioPrimitive, _extends__default.default({
  components: {
    Label: ControlLabel
  }
}, props)), Radio = props => core.jsx(reactRadios.Radio, _extends__default.default({
  component: ButtonRadio
}, props));

exports.Checkbox = Checkbox, exports.CheckboxGroup = CheckboxGroup, exports.Radio = Radio, 
exports.RadioGroup = RadioGroup;
