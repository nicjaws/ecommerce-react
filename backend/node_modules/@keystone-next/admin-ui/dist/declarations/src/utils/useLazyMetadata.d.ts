import { GraphQLError } from 'graphql';
import { DocumentNode } from '../apollo';
export declare type AuthenticatedItem = {
    state: 'unauthenticated';
} | {
    state: 'authenticated';
    label: string;
    id: string;
    listKey: string;
} | {
    state: 'loading';
} | {
    state: 'error';
    error: Error | readonly [GraphQLError, ...GraphQLError[]];
};
export declare type VisibleLists = {
    state: 'loaded';
    lists: ReadonlySet<string>;
} | {
    state: 'loading';
} | {
    state: 'error';
    error: Error | readonly [GraphQLError, ...GraphQLError[]];
};
export declare type CreateViewFieldModes = {
    state: 'loaded';
    lists: Record<string, Record<string, 'edit' | 'hidden'>>;
} | {
    state: 'loading';
} | {
    state: 'error';
    error: Error | readonly [GraphQLError, ...GraphQLError[]];
};
export declare function useLazyMetadata(query: DocumentNode): {
    authenticatedItem: AuthenticatedItem;
    refetch: () => void;
    visibleLists: VisibleLists;
    createViewFieldModes: CreateViewFieldModes;
};
