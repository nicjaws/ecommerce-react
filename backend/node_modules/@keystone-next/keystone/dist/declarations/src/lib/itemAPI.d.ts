import { GraphQLSchema } from 'graphql';
import { BaseGeneratedListTypes, BaseKeystoneList, KeystoneListsAPI, KeystoneContext } from '@keystone-next/types';
export declare function getArgsFactory(list: BaseKeystoneList, schema: GraphQLSchema): {
    findOne: (args: Record<string, any>) => {
        [key: string]: any;
    };
    findMany: (args: Record<string, any>) => {
        [key: string]: any;
    };
    count: (args: Record<string, any>) => {
        [key: string]: any;
    };
    createOne: (args: Record<string, any>) => {
        [key: string]: any;
    };
    createMany: (args: Record<string, any>) => {
        [key: string]: any;
    };
    updateOne: (args: Record<string, any>) => {
        [key: string]: any;
    };
    updateMany: (args: Record<string, any>) => {
        [key: string]: any;
    };
    deleteOne: (args: Record<string, any>) => {
        [key: string]: any;
    };
    deleteMany: (args: Record<string, any>) => {
        [key: string]: any;
    };
};
export declare function itemAPIForList(list: BaseKeystoneList, context: KeystoneContext, getArgs: ReturnType<typeof getArgsFactory>): KeystoneListsAPI<Record<string, BaseGeneratedListTypes>>[string];
