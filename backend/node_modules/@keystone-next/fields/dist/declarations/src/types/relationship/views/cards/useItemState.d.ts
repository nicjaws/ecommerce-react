import { FieldMeta, ListMeta } from '@keystone-next/types';
import { controller } from '../index';
import { DataGetter } from '@keystone-next/admin-ui-utils';
declare type ItemsState = {
    kind: 'loading';
} | {
    kind: 'error';
    message: string;
} | {
    kind: 'loaded';
};
declare type Items = Record<string, DataGetter<{
    id: string;
    [key: string]: any;
}>>;
export declare function useItemState({ selectedFields, localList, id, field, }: {
    selectedFields: string;
    localList: ListMeta;
    field: ReturnType<typeof controller>;
    id: string;
}): {
    items: Record<string, DataGetter<{
        [key: string]: any;
        id: string;
    }>>;
    setItems: (items: Items) => void;
    state: ItemsState;
};
export declare function useFieldsObj(list: ListMeta, fields: string[] | undefined): Record<string, FieldMeta>;
export {};
