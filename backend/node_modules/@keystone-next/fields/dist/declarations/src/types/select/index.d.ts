import type { FieldType, BaseGeneratedListTypes, FieldDefaultValue } from '@keystone-next/types';
import type { FieldConfig } from '../../interfaces';
export declare type SelectFieldConfig<TGeneratedListTypes extends BaseGeneratedListTypes> = FieldConfig<TGeneratedListTypes> & ({
    options: {
        label: string;
        value: string;
    }[];
    dataType?: 'string' | 'enum';
    defaultValue?: FieldDefaultValue<string>;
} | {
    options: {
        label: string;
        value: number;
    }[];
    dataType: 'integer';
    defaultValue?: FieldDefaultValue<number>;
}) & {
    ui?: {
        displayMode?: 'select' | 'segmented-control';
    };
    isRequired?: boolean;
    isIndexed?: boolean;
    isUnique?: boolean;
};
export declare const select: <TGeneratedListTypes extends BaseGeneratedListTypes>(config: SelectFieldConfig<TGeneratedListTypes>) => FieldType<TGeneratedListTypes>;
