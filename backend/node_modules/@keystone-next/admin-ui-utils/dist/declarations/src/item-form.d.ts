import { DataGetter } from './dataGetter';
import { ItemData } from './serialization';
import { FieldMeta } from '@keystone-next/types';
import { GraphQLError } from 'graphql';
export declare type Value = Record<string, {
    kind: 'error';
    errors: readonly [GraphQLError, ...GraphQLError[]];
} | {
    kind: 'value';
    value: any;
}>;
export declare function useChangedFieldsAndDataForUpdate(fields: Record<string, FieldMeta>, itemGetter: DataGetter<ItemData>, value: Value): {
    changedFields: ReadonlySet<string>;
    dataForUpdate: Record<string, any>;
};
