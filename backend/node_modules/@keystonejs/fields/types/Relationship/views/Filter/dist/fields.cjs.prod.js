'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var RelationshipSelect = require('../../../../../dist/RelationshipSelect-3b2b5df6.cjs.prod.js');
require('@babel/runtime/helpers/extends');
require('../../../../../dist/objectSpread2-4dba075b.cjs.prod.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@emotion/core');
require('@apollo/client');
require('@arch-ui/select');
require('react-select');
require('intersection-observer');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefault(React);

const EventCatcher = ({
  children
}) => /*#__PURE__*/React__default['default'].createElement("div", {
  onClick: e => {
    e.preventDefault();
    e.stopPropagation();
  }
}, children);

const RelationshipFilterView = ({
  onChange,
  filter,
  field,
  value
}) => {
  const handleChange = option => {
    if (option === null) {
      onChange(null);
    } else {
      const {
        value
      } = option;

      if (value) {
        onChange(value.id);
      }
    }
  };

  if (!filter) return null;
  const htmlID = `ks-input-${field.path}`;
  return /*#__PURE__*/React__default['default'].createElement(EventCatcher, null, /*#__PURE__*/React__default['default'].createElement(RelationshipSelect.RelationshipSelect, {
    field: field,
    renderContext: null,
    htmlID: htmlID,
    onChange: handleChange,
    value: value,
    isMulti: false
  }));
};

exports.default = RelationshipFilterView;
