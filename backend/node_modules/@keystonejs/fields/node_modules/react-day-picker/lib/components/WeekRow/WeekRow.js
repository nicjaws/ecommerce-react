import * as React from 'react';
import { getUnixTime } from 'date-fns';
/**
 * Render a week row.
 *
 * @category Components
 * @private
 */
export function WeekRow(props) {
    var weekNumber = props.weekNumber, week = props.week, currentMonth = props.currentMonth, dayPickerProps = props.dayPickerProps;
    var showWeekNumber = dayPickerProps.showWeekNumber, classNames = dayPickerProps.classNames, styles = dayPickerProps.styles, components = dayPickerProps.components;
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    var _a = components, Day = _a.Day, WeekNumber = _a.WeekNumber;
    return (React.createElement("tr", { className: classNames === null || classNames === void 0 ? void 0 : classNames.week, style: styles === null || styles === void 0 ? void 0 : styles.week },
        showWeekNumber && (React.createElement("th", { className: classNames === null || classNames === void 0 ? void 0 : classNames.weekWeeknumber, style: styles === null || styles === void 0 ? void 0 : styles.weekWeeknumber },
            React.createElement(WeekNumber, { days: week, number: Number(weekNumber), dayPickerProps: dayPickerProps }))),
        week.map(function (day) { return (React.createElement("td", { className: classNames === null || classNames === void 0 ? void 0 : classNames.weekDay, style: styles === null || styles === void 0 ? void 0 : styles.weekDay, key: getUnixTime(day) },
            React.createElement(Day, { day: day, dayPickerProps: dayPickerProps, currentMonth: currentMonth }))); })));
}
//# sourceMappingURL=WeekRow.js.map