var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { getDayProps } from './getDayProps';
import { useModifiers } from '../../hooks/useModifiers';
/**
 * The `Day` component renders the content of the day cell. It renders a button
 * if the day is interactive (i.e. it is clickable).
 *
 * This component can be [[include:swizzling.md]].
 *
 * @category Components
 */
export function Day(props) {
    var day = props.day, dayPickerProps = props.dayPickerProps, currentMonth = props.currentMonth;
    var locale = dayPickerProps.locale, formatDay = dayPickerProps.formatDay;
    var modifiers = useModifiers(day, currentMonth, dayPickerProps);
    if (modifiers.hidden) {
        return React.createElement("span", { "aria-hidden": true });
    }
    var _a = getDayProps(day, modifiers, dayPickerProps), containerProps = _a.containerProps, wrapperProps = _a.wrapperProps;
    var Component = modifiers.interactive ? 'button' : 'span';
    return (React.createElement(Component, __assign({}, containerProps),
        React.createElement("span", __assign({}, wrapperProps), formatDay === null || formatDay === void 0 ? void 0 : formatDay(day, { locale: locale }))));
}
//# sourceMappingURL=Day.js.map