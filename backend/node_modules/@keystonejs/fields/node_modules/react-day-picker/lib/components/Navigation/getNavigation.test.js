var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { defaultProps } from '../DayPicker/defaults/defaultProps';
import { getNavigation } from './getNavigation';
describe('getNavigation', function () {
    it('return next and previous months with default props', function () {
        var result = getNavigation(defaultProps);
        expect(result.nextMonth).toBeDefined();
        expect(result.prevMonth).toBeDefined();
    });
    it('defaults to current month', function () {
        var result = getNavigation(__assign(__assign({}, defaultProps), { month: undefined }));
        expect(result.nextMonth).toBeDefined();
        expect(result.prevMonth).toBeDefined();
    });
    it('return next and previous months for the specified month', function () {
        var result = getNavigation(__assign(__assign({}, defaultProps), { month: new Date(2019, 8) }));
        expect(result.nextMonth && result.nextMonth.getMonth()).toBe(9);
        expect(result.prevMonth && result.prevMonth.getMonth()).toBe(7);
    });
    it('respect the passed number of months', function () {
        var result = getNavigation(__assign(__assign({}, defaultProps), { month: new Date(2019, 8), pagedNavigation: true, numberOfMonths: 3 }));
        expect(result.nextMonth && result.nextMonth.getMonth()).toBe(11);
        expect(result.prevMonth && result.prevMonth.getMonth()).toBe(5);
    });
    it('returns undefined as prev month when fromMonth is set', function () {
        var result = getNavigation(__assign(__assign({}, defaultProps), { month: new Date(2019, 8), fromMonth: new Date(2019, 8) }));
        expect(result.prevMonth).toBeUndefined();
    });
    it('returns undefined as next month when toMonth is set', function () {
        var result = getNavigation(__assign(__assign({}, defaultProps), { month: new Date(2019, 8), toMonth: new Date(2019, 8) }));
        expect(result.nextMonth).toBeUndefined();
    });
});
//# sourceMappingURL=getNavigation.test.js.map