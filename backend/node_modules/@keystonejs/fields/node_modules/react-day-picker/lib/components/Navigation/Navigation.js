var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { getNavigation } from './getNavigation';
import { getNavigationProps } from './getNavigationProps';
/**
 * Renders the buttons to navigate between months.
 *
 * @category Components
 */
export function Navigation(props) {
    var dayPickerProps = props.dayPickerProps;
    var onMonthChange = dayPickerProps.onMonthChange, onPrevClick = dayPickerProps.onPrevClick, onNextClick = dayPickerProps.onNextClick;
    var _a = getNavigation(dayPickerProps), nextMonth = _a.nextMonth, prevMonth = _a.prevMonth;
    var _b = getNavigationProps(dayPickerProps), containerProps = _b.containerProps, nextProps = _b.nextProps, prevProps = _b.prevProps;
    var handlePrevClick = function (e) {
        if (!prevMonth)
            return;
        if (onMonthChange)
            onMonthChange(prevMonth, e);
        if (onPrevClick)
            onPrevClick(prevMonth, e);
    };
    var handleNextClick = function (e) {
        if (!nextMonth)
            return;
        if (onMonthChange)
            onMonthChange(nextMonth, e);
        if (onNextClick)
            onNextClick(nextMonth, e);
    };
    var prevLabel = dayPickerProps.prevLabel, nextLabel = dayPickerProps.nextLabel;
    var prevButton = prevLabel && (React.createElement("button", __assign({}, prevProps, { key: "prev", disabled: !prevMonth, type: "button", onClick: handlePrevClick }), prevLabel));
    var nextButton = nextLabel && (React.createElement("button", __assign({}, nextProps, { key: 'next', disabled: !nextMonth, type: "button", onClick: handleNextClick }), nextLabel));
    var buttons = [prevButton, nextButton];
    if (dayPickerProps.dir === 'rtl') {
        buttons = buttons.reverse();
    }
    return React.createElement("div", __assign({}, containerProps), buttons);
}
//# sourceMappingURL=Navigation.js.map