import '@babel/runtime/helpers/objectWithoutProperties';
import '@emotion/core';
import { createElement } from 'react';
import '@arch-ui/theme';
import '@babel/runtime/helpers/extends';
import { type as type$1 } from '../../paragraph/dist/fields-content.esm.js';
import '@arch-ui/color-utils';
import '@arch-ui/tooltip';
import '@arch-ui/typography';
import { T as ToolbarButton } from '../../../../../dist/toolbar-components-c9e1fefe.esm.js';
import { a as hasBlock } from '../../../../../dist/utils-d86d79bf.esm.js';

let type = 'heading';
function ToolbarElement({
  editor,
  editorState
}) {
  return /*#__PURE__*/createElement(ToolbarButton, {
    icon: /*#__PURE__*/createElement("span", {
      "aria-hidden": true
    }, "H"),
    label: "Heading",
    isActive: hasBlock(editorState, type),
    onClick: () => {
      if (hasBlock(editorState, type)) {
        editor.setBlocks({
          type: type$1
        });
      } else {
        editor.setBlocks({
          type: type
        });
      }

      editor.focus();
    }
  });
}
function Node({
  attributes,
  children
}) {
  return /*#__PURE__*/createElement("h2", attributes, children);
}
let getPlugins = () => [{
  onKeyDown(event, editor, next) {
    // make it so when you press enter after typing a heading,
    // the block type will change to a paragraph
    if (event.keyCode === 13 && editor.value.blocks.every(block => block.type === type)) {
      editor.splitBlock().setBlocks(type$1);
      return;
    }

    next();
  }

}];

export { Node, ToolbarElement, getPlugins, type };
