import path from 'path';
import { Block } from '../Block/dist/fields-content.esm.js';

const pkgDir = path.dirname(require.resolve('@keystonejs/fields-content/package.json'));
const resolveView = pathname => path.join(pkgDir, pathname);

class BlockquoteBlock extends Block {
  get type() {
    return 'blockquote';
  }

  getAdminViews() {
    return [resolveView('views/editor/blocks/blockquote')];
  }

}

class CaptionBlock extends Block {
  get type() {
    return 'caption';
  }

  getAdminViews() {
    return [resolveView('views/editor/blocks/caption')];
  }

}

class HeadingBlock extends Block {
  get type() {
    return 'heading';
  }

  getAdminViews() {
    return [resolveView('views/editor/blocks/heading'), ...new ParagraphBlock().getAdminViews()];
  }

}

class ImageBlock extends Block {
  get type() {
    return 'image';
  }

  getAdminViews() {
    return [resolveView('views/editor/blocks/image')];
  }

}

class ImageContainerBlock extends Block {
  get type() {
    return 'image-container';
  }

  getAdminViews() {
    return [resolveView('views/editor/blocks/image-container'), ...new ImageBlock().getAdminViews(), ...new CaptionBlock().getAdminViews()];
  }

}

class LinkBlock extends Block {
  get type() {
    return 'link';
  }

  getAdminViews() {
    return [resolveView('views/editor/blocks/link')];
  }

}

class ListItemBlock extends Block {
  get type() {
    return 'list-item';
  }

  getAdminViews() {
    return [resolveView('views/editor/blocks/list-item')];
  }

}

class OrderedListBlock extends Block {
  get type() {
    return 'ordered-list';
  }

  getAdminViews() {
    return [resolveView('views/editor/blocks/ordered-list'), ...new ListItemBlock().getAdminViews()];
  }

}

class ParagraphBlock extends Block {
  get type() {
    return 'paragraph';
  }

  getAdminViews() {
    return [resolveView('views/editor/blocks/paragraph')];
  }

}

class UnorderedListBlock extends Block {
  get type() {
    return 'unordered-list';
  }

  getAdminViews() {
    return [resolveView('views/editor/blocks/unordered-list'), ...new ListItemBlock().getAdminViews()];
  }

}

export { BlockquoteBlock as B, CaptionBlock as C, HeadingBlock as H, ImageContainerBlock as I, LinkBlock as L, OrderedListBlock as O, ParagraphBlock as P, UnorderedListBlock as U, ImageBlock as a, ListItemBlock as b, resolveView as r };
